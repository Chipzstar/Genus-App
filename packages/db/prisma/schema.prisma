// -------------------------------------
// WARNING
// THIS FILE IS AUTOGENERATED BY PRISMERGE
// DO NOT MANUALLY EDIT THIS FILE!
// -------------------------------------

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  thread    Thread   @relation(fields: [threadId], references: [id], onDelete: Cascade)
  threadId  Int

  @@index([authorId, threadId])
}

model GroupUser {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
  group   Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId Int

  @@index([userId, groupId])
}

model Group {
  id       Int         @id @default(autoincrement())
  name     String
  members  GroupUser[]
  messages Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   Int
  thread    Thread?

  @@index([authorId, groupId])
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int

  @@index([authorId])
}

model Thread {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  message   Message   @relation(fields: [messageId], references: [id], onDelete: Cascade)
  messageId Int       @unique
  comments  Comment[]

  @@index([authorId, messageId])
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  firstname String
  lastname  String
  posts     Post[]
  groups    GroupUser[]
  messages  Message[]
  threads   Thread[]
  comments  Comment[]
}
